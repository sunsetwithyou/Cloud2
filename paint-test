name: CI-CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_API: ghcr.io/<org>/<repo>/api
      IMAGE_FE:  ghcr.io/<org>/<repo>/frontend
      GIT_SHA:   ${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Build & push API (with cache) ---
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push API
        uses: docker/build-push-action@v6
        with:
          context: ./api
          tags: |
            ${{ env.IMAGE_API }}:${{ env.GIT_SHA }}
            ${{ env.IMAGE_API }}:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          tags: |
            ${{ env.IMAGE_FE }}:${{ env.GIT_SHA }}
            ${{ env.IMAGE_FE }}:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Deploy to Kubernetes ---
      - name: Setup kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          kubectl version --client=true

      - name: Inject image tag and apply manifests
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install -y gettext-base
          export GIT_SHA=${GIT_SHA}
          for f in k8s/*.yaml; do envsubst < "$f" | kubectl apply -f - ; done

      - name: Wait for rollout
        run: |
          kubectl -n demo rollout status deploy/api --timeout=120s
          kubectl -n demo rollout status deploy/frontend --timeout=1